syntax = "proto3";
option java_package = "edu.usfca.cs.dfs";

message StoreChunk {
     string fileName = 1;
     int32 chunkId = 2;
     int32 chunkSize = 3;
     int32 totalChunks = 4;
     repeated string storageNodeIds = 5;

     bytes data = 6;
     string toStorageNodeId = 7;
 }

message ChunkMeta {
    string fileName = 1;
    int32 chunkId = 2;
    int32 chunkSize = 3;
    int32 totalChunks = 4;
    repeated string storageNodeIds = 5;
}

message StorageChunkMeta {
    string fileName = 1;
    int32 chunkId = 2;
    int32 totalChunks = 4;
}


message RetrieveFile {
    string fileName = 1;
}

message RetrieveChunkMeta{
    string fileChunkId = 1;
}

message RetrieveChunk{
    string fileChunkId = 1;
}

message Chunk {
    bool found = 1;
    string fileChunkId = 2;
    bytes data = 3;
}

message ChunkLocation{
    string fileName = 1;
    int32 chunkId = 2;
}

message ListChunksAndFileName{
    repeated string files = 1;
    repeated int32 chunks = 2;
}

message HeartBeat{
    string ipAddress = 1;
    string port = 2;
    int64 spaceRemaining = 3;
    int64 requestProcessed = 4;
    int64 retrievalProcessed = 5;
}

message BecomePrimary{
    string forApAddress = 1;
    string forPort = 2;
    repeated string askIds = 3;
}

message NewPrimaryAlert{
    string forIpAddress = 1;
    string forPort = 2;
    string newIpAddress = 3;
    string newPort = 4;
}

message CreateNewReplica {
    string lostReplicaId = 1;
    string newReplicaId = 2;
}

message StorageNodesHavingChunk {
    repeated string storageNode = 1;
}

message MappingChunkIdToStorageNodes{
    map<string,StorageNodesHavingChunk> mapping = 1;
}

message NewPrimaryReply{
    bool replicated = 1;
}

message StorageMessageWrapper {
    oneof msg {
        StoreChunk storeChunkMsg = 1;
        RetrieveFile retrieveFileMsg = 2;
        RetrieveChunk retrieveChunkMsg = 3;
        HeartBeat heartBeatMsg = 4;
        ChunkMeta chunkMetaMsg = 5;
        RetrieveChunkMeta retrieveChunkMetaMsg = 6;
        StorageChunkMeta storageChunkMetaMsg = 7;
        BecomePrimary becomePrimaryMsg = 8;
        NewPrimaryAlert newPrimaryAlertMsg = 9;
        StorageNodesHavingChunk storageNodesHavingChunkMsg = 10;
        MappingChunkIdToStorageNodes mappingChunkIdToStorageNodesMsg = 11;
        Chunk chunkMsg = 12;
        NewPrimaryReply replyMsg = 13;
        CreateNewReplica createNewReplicaMsg = 14;
    }
}

